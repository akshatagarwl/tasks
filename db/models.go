// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type DMTaskStatus string

const (
	TaskStatusPENDING    DMTaskStatus = "PENDING"
	TaskStatusINPROGRESS DMTaskStatus = "IN_PROGRESS"
	TaskStatusCOMPLETED  DMTaskStatus = "COMPLETED"
)

func (e *DMTaskStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = DMTaskStatus(s)
	case string:
		*e = DMTaskStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for DMTaskStatus: %T", src)
	}
	return nil
}

type NullDMTaskStatus struct {
	DMTaskStatus DMTaskStatus
	Valid        bool // Valid is true if DMTaskStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullDMTaskStatus) Scan(value interface{}) error {
	if value == nil {
		ns.DMTaskStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.DMTaskStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullDMTaskStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.DMTaskStatus), nil
}

type DMTask struct {
	ID          uuid.UUID
	Title       string
	Description pgtype.Text
	Status      string
}
