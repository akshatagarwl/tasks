networks:
  tasks-net:
    driver: bridge

volumes:
  db-data:
    driver: local
  atlas:
    driver: local

services:
  db:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tasks
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tasks-net

  # atlas needs dev db for schema apply
  dev-db:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tasks-net

  atlas-login:
    image: arigaio/atlas:latest
    command: login --token ${ATLAS_TOKEN}
    volumes:
      - atlas:/root/.atlas

  atlas-migrate:
    build:
      context: .
      dockerfile: atlas.Dockerfile
    command: schema apply -u 'postgres://postgres:postgres@db:5432/tasks?sslmode=disable' --dev-url 'postgres://postgres:postgres@dev-db:5432/postgres?sslmode=disable' --to 'file://schema.sql' --auto-approve
    volumes:
      - atlas:/root/.atlas
    depends_on:
      db:
        condition: service_healthy
      dev-db:
        condition: service_healthy
      atlas-login:
        condition: service_completed_successfully
    networks:
      - tasks-net

  api:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      replicas: 3
    ports:
      - "8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=tasks
    depends_on:
      atlas-migrate:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - tasks-net

  load-balancer:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
    networks:
      - tasks-net
